{"id":"OrjB","dependencies":[{"name":"/Users/danlevy/Documents/College/Senior Year/Senior Design Project/repo.nosync/web-app/package.json","includedInParent":true,"mtime":1586535636666},{"name":"/Users/danlevy/Documents/College/Senior Year/Senior Design Project/repo.nosync/web-app/node_modules/nanoid/package.json","includedInParent":true,"mtime":1586211622985}],"generated":{"js":"module.exports=function(t,r,e){for(var a=(2<<Math.log(r.length-1)/Math.LN2)-1,h=Math.ceil(1.6*a*e/r.length),l=\"\";;)for(var n=h,o=t(n);n--;){var f=r[o[n]&a];if(f&&(l+=f).length===+e)return l}};"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/nanoid/format.js","original":{"line":29,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/nanoid/format.js","original":{"line":29,"column":0},"generated":{"line":1,"column":7}},{"source":"../../node_modules/nanoid/format.js","original":{"line":29,"column":0},"generated":{"line":1,"column":15}},{"source":"../../node_modules/nanoid/format.js","original":{"line":29,"column":0},"generated":{"line":1,"column":24}},{"source":"../../node_modules/nanoid/format.js","original":{"line":29,"column":0},"generated":{"line":1,"column":26}},{"source":"../../node_modules/nanoid/format.js","original":{"line":29,"column":0},"generated":{"line":1,"column":28}},{"source":"../../node_modules/nanoid/format.js","original":{"line":34,"column":0},"generated":{"line":1,"column":31}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":35}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":39}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":42}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":45}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":50}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":54}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":56}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":63}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":66}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":71}},{"source":"../../node_modules/nanoid/format.js","original":{"line":30,"column":0},"generated":{"line":1,"column":76}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":78}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":80}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":85}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":90}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":94}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":96}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":98}},{"source":"../../node_modules/nanoid/format.js","original":{"line":31,"column":0},"generated":{"line":1,"column":100}},{"source":"../../node_modules/nanoid/format.js","original":{"line":32,"column":0},"generated":{"line":1,"column":108}},{"source":"../../node_modules/nanoid/format.js","original":{"line":32,"column":0},"generated":{"line":1,"column":110}},{"source":"../../node_modules/nanoid/format.js","original":{"line":37,"column":0},"generated":{"line":1,"column":115}},{"source":"../../node_modules/nanoid/format.js","original":{"line":35,"column":0},"generated":{"line":1,"column":119}},{"source":"../../node_modules/nanoid/format.js","original":{"line":35,"column":0},"generated":{"line":1,"column":123}},{"source":"../../node_modules/nanoid/format.js","original":{"line":35,"column":0},"generated":{"line":1,"column":125}},{"source":"../../node_modules/nanoid/format.js","original":{"line":36,"column":0},"generated":{"line":1,"column":127}},{"source":"../../node_modules/nanoid/format.js","original":{"line":36,"column":0},"generated":{"line":1,"column":129}},{"source":"../../node_modules/nanoid/format.js","original":{"line":36,"column":0},"generated":{"line":1,"column":131}},{"source":"../../node_modules/nanoid/format.js","original":{"line":37,"column":0},"generated":{"line":1,"column":134}},{"source":"../../node_modules/nanoid/format.js","original":{"line":37,"column":0},"generated":{"line":1,"column":139}},{"source":"../../node_modules/nanoid/format.js","original":{"line":38,"column":0},"generated":{"line":1,"column":140}},{"source":"../../node_modules/nanoid/format.js","original":{"line":38,"column":0},"generated":{"line":1,"column":144}},{"source":"../../node_modules/nanoid/format.js","original":{"line":38,"column":0},"generated":{"line":1,"column":146}},{"source":"../../node_modules/nanoid/format.js","original":{"line":38,"column":0},"generated":{"line":1,"column":148}},{"source":"../../node_modules/nanoid/format.js","original":{"line":38,"column":0},"generated":{"line":1,"column":150}},{"source":"../../node_modules/nanoid/format.js","original":{"line":38,"column":0},"generated":{"line":1,"column":153}},{"source":"../../node_modules/nanoid/format.js","original":{"line":39,"column":0},"generated":{"line":1,"column":156}},{"source":"../../node_modules/nanoid/format.js","original":{"line":39,"column":0},"generated":{"line":1,"column":159}},{"source":"../../node_modules/nanoid/format.js","original":{"line":40,"column":0},"generated":{"line":1,"column":163}},{"source":"../../node_modules/nanoid/format.js","original":{"line":40,"column":0},"generated":{"line":1,"column":166}},{"source":"../../node_modules/nanoid/format.js","original":{"line":41,"column":0},"generated":{"line":1,"column":169}},{"source":"../../node_modules/nanoid/format.js","original":{"line":41,"column":0},"generated":{"line":1,"column":179}},{"source":"../../node_modules/nanoid/format.js","original":{"line":41,"column":0},"generated":{"line":1,"column":181}},{"source":"../../node_modules/nanoid/format.js","original":{"line":41,"column":0},"generated":{"line":1,"column":188}}],"sources":{"../../node_modules/nanoid/format.js":"/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var i = step\n    var bytes = random(i)\n    while (i--) {\n      var alpha = alphabet[bytes[i] & mask]\n      if (alpha) {\n        id += alpha\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n"},"lineCount":null}},"error":null,"hash":"c64507e5f0c533670e57ee6fa7e9d261","cacheData":{"env":{}}}